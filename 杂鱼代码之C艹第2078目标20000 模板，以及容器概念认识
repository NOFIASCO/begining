#include <iostream>
using namespace std;
#include "MyArr.hpp"
#include <vector>
#include <algorithm>
#include <string>
class person
{
public:
	person(string name, int age)
	{
		this->Name = name;
		this->Age = age;
	}
	string Name;
	int Age;
};
void test()
{
	vector <person*> v;
	person p1("aaa", 10);
	person p2("aba", 20);
	person p3("aca", 30);
	v.push_back(&p1);
	v.push_back(&p2);
	v.push_back(&p3);
	for(vector<person *>::iterator it=v.begin();it!=v.end(); it++)
	{
		cout << (**it).Name << (**it).Age << endl;
	}
}
int main()
{
	test();
}
//void print(int val)
//{
//	cout << val << endl;
//}
//void test()
//{
//	vector <int> v;
//	v.push_back(10);
//	v.push_back(20);
//	v.push_back(30);
//	vector<int>::iterator itBegin = v.begin();
//	vector<int>::iterator itnEnd = v.end();
//	for_each(v.begin(), v.end(), print);
//}
//int main()
//{
//	test();
//}
//void test()
//{
//	MyArray <int>arr(5);
//}
//int main()
//{
//
//	system("pause");
//	return 0;
//#include<iostream>
//using namespace std;
//template <typename T>
//void MySwap(T& a, T& b)
//{
//	T temp = a;
//	a = b;
//	b = temp;
//}
//template<typename T>
//void MyShort(T arr[],int len)
//{
//	for (int i = 0; i < len; i++)
//	{
//		int max = i;
//		for (int j = i + 1; j < len; j++)
//		{
//			if (arr[max] < arr[j])
//			{
//				max = j;
//			}
//		}
//		if (max != i)
//		{
//			MySwap(arr[max], arr[i]);
//		}
//	}
//}
//void test01()
//{
//	int num[] = { 2,7,4,5,6,1,9,3,0,4 };
//	int len = sizeof(num) / sizeof(num[0]);
//	MyShort(num, len);	
//		for (size_t i = 0; i < len; i++)
//		{
//			cout << num[i] << " ";
//		}
//		cout << endl;
//}
//void test()
//{  
//	char ch[] = "acegfhbv";
//	int len = sizeof(ch) / sizeof(ch[0]);
//	MyShort(ch, len);
//	for (size_t i = 0; i < len; i++)
//	{
//		cout << ch[i] << " ";
//	}
//	cout << endl;
//}
//int main()
//{
//	test();
//	test01();
//}
