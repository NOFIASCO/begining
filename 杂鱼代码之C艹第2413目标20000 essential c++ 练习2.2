//esential c++ 练习 2.2 2.3 2.4
//讲道理，外国人写的东西翻译过来是真难理解
#include <iostream>
#include <fstream>
#include <vector>
using namespace std;
bool Penta(vector<int>&vec, int pos)
{
	if (pos <= 0 || pos > 64)
	{
		cout << "sorry:invalid posstion " << endl;
		return false;
	}
	else
	for (int i = vec.size()+1; i <= pos; ++i)
	{
		 vec.push_back((i * (3 * i - 1)) / 2);
	}
	return true;
}
void Display_elements(vector<int>& vec, const string& title, ostream& os = cout)
{
	os << "\n" << title << "\t" << endl;
	for (vector<int>::iterator itbegin = vec.begin(); itbegin != vec.end(); ++itbegin)
	{
		cout << *itbegin << " ";	
	}
	cout << endl;
}
int main()
{
	vector<int>pent;
	const string title("pentagonal numeric series ");

	if (Penta(pent, 0))
		Display_elements(pent, title);
	if (Penta(pent, 8))
		Display_elements(pent, title);
	if (Penta(pent, 14))
		Display_elements(pent, title);
	if (Penta(pent, 138))
		Display_elements(pent, title);

}
#include <iostream>
#include <fstream>
#include <vector>
using namespace std;
extern bool Penta(vector<int>& vec, int pos)
{
	for (int i = vec.size() + 1; i <= pos; ++i)
	{
		vec.push_back((i * (3 * i - 1)) / 2);
	}
	return true;
}
inline bool IsSizeOk(vector<int>&vec,int pos)
{
	if (pos <= 0 || pos > 64)
	{
		cout << "sorry:invalid posstion " << endl;
		return false;
	}
	if (vec.size() < pos)
	{
		Penta(vec, pos);
	}
}
void Display_elements(vector<int>& vec, const string& title, ostream& os = cout)
{
	os << "\n" << title << "\t" << endl;
	for (vector<int>::iterator itbegin = vec.begin(); itbegin != vec.end(); ++itbegin)
	{
		cout << *itbegin << " ";	
	}
	cout << endl;
}
int main()
{
	vector<int>pent;
	const string title("pentagonal numeric series ");

	if (IsSizeOk(pent, 0))
		Display_elements(pent, title);
	if (IsSizeOk(pent, 8))
		Display_elements(pent, title);
	if (IsSizeOk(pent, 14))
		Display_elements(pent, title);
	if (IsSizeOk(pent, 138))
		Display_elements(pent, title);
}
//esential c++ 练习 2.4
#include <iostream>
#include <vector>
using namespace std;
bool Checksize(int pos)
{
	return(pos <= 0 || pos > 64) ? false : true;
}
const vector <int>* Penta_seriers(int pos)
{
	static vector <int> elem;
	if (Checksize(pos) && pos > elem.size())
	{
		for (int i = elem.size() + 1; i <= pos; ++i)//这里如果不加等于符号会报错vector subscript out of range原因暂时没想通
			elem.push_back((i*(3*i-1))/2);
		return &elem;
	}
}
bool caclulation(int pos, int& elem)
{
	if (!Checksize(pos))
	{
	    cout << "Error:invalid position!!! " << elem << endl;
	    elem = 0;
	    return false;
    }
	const vector <int>* pent = Penta_seriers(pos);
	elem = (*pent)[pos - 1];
	return true;
}
int main()
{
	int elem;
	if (caclulation(8, elem))
		cout << "the position 8 is " << elem << endl;
	if (caclulation(88, elem))
		cout << "the position 88 is " << elem << endl;
	if (caclulation(12, elem))
		cout << "the position 12 is " << elem << endl;
	if (caclulation(64, elem))
		cout << "the position 64 is " << elem << endl;

}
